
'use server';

import { getAllPayrollRecords, getPayrollRecordsForEmployee } from './fetchPayrollData';
import type { PayrollRecord } from '@/types/database';
import { db } from '@/lib/firebase';
import { doc, getDoc } from 'firebase/firestore';

interface ExportResult {
  success: boolean;
  csvData?: string;
  error?: string;
  message?: string;
}

function convertPayrollRecordsToCSV(records: PayrollRecord[]): string {
  if (!records || records.length === 0) {
    return '';
  }

  const headers = [
    "Record ID", "Employee ID", "Project ID",
    "Pay Period Start", "Pay Period End", "Hours Worked",
    "Hourly Rate", "Task Pay", "Approved Expenses",
    "Deductions", "Total Pay", "Generated By", "Generated At",
    "Task IDs Processed", "Expense IDs Processed"
  ];

  const rows = records.map(record => [
    record.id,
    record.employeeId,
    record.projectId,
    record.payPeriod.start, 
    record.payPeriod.end,
    (record.hoursWorked || 0).toFixed(2),
    (record.hourlyRate || 0).toFixed(2),
    (record.taskPay || 0).toFixed(2),
    (record.approvedExpenses || 0).toFixed(2),
    (record.deductions || 0).toFixed(2),
    (record.totalPay || 0).toFixed(2),
    record.generatedBy,
    record.generatedAt,
    record.taskIdsProcessed.join(';'), 
    record.expenseIdsProcessed.join(';')
  ].map(value => `"${String(value !== undefined && value !== null ? value : '').replace(/"/g, '""')}"`).join(','));

  return [headers.join(','), ...rows].join('\n');
}

export async function exportPayrollHistoryToCSV(adminUserId: string, employeeId?: string): Promise<ExportResult> {
  if (!adminUserId) {
    return { success: false, error: 'Admin user ID is required for authorization.' };
  }

  // Verify admin role
  const adminUserDoc = await getDoc(doc(db, 'users', adminUserId));
  if (!adminUserDoc.exists() || adminUserDoc.data()?.role !== 'admin') {
    return { success: false, error: 'Unauthorized. Only admins can export payroll history.' };
  }

  try {
    let fetchResult;
    if (employeeId) {
      fetchResult = await getPayrollRecordsForEmployee(employeeId);
    } else {
      fetchResult = await getAllPayrollRecords(adminUserId);
    }

    if (!fetchResult.success || !fetchResult.records) {
      return { success: false, error: fetchResult.error || "Failed to fetch payroll records for CSV export." };
    }

    if (fetchResult.records.length === 0) {
      return { success: true, csvData: '', message: "No payroll records found to export." };
    }

    const csvData = convertPayrollRecordsToCSV(fetchResult.records);
    return { success: true, csvData };

  } catch (error) {
    console.error('Error exporting payroll history to CSV:', error);
    const errorMessage = error instanceof Error ? error.message : 'An unexpected error occurred during CSV export.';
    return { success: false, error: errorMessage };
  }
}
